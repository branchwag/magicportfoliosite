/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/
"use client";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";

const Witch = React.memo(function Witch(props) {
  // Use React.memo for performance optimization
  const { nodes, materials } = useGLTF("/models/scene-transformed.glb");

  const modelRef = useRef();

  useFrame((state) => {
    modelRef.current.position.y =
      -1.5 + Math.sin(state.clock.elapsedTime) * 0.15;
  });

  return (
    <group
      {...props}
      dispose={null}
      ref={modelRef}
      position={[0, 0, 0]}
      scale={[0.01, 0.01, 0.01]}
      rotation={[0.25, 0, 0]}
    >
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Hat_Hat1_0.geometry}
        material={materials.Hat1}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Body_Body1_0.geometry}
        material={materials.Body1}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Body_Clothing_0.geometry}
        material={materials.Clothing}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Broom_LP1_Broom_LP_0.geometry}
        material={materials.Broom_LP}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.polySurface2_T_LPlambert3SG1_0.geometry}
        material={materials.T_LPlambert3SG1}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.polySurface10_ground2_0.geometry}
        material={materials.ground2}
      />
    </group>
  );
});

export default Witch;
useGLTF.preload("/models/scene-transformed.glb");
